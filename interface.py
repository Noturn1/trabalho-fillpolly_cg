import tkinter as tk
from tkinter import colorchooser

# Pegar as posi√ß√µes X e Y que o usu√°rio est√° clicando com o mouse
# Marcar os pontos que o us√°rio selecionar com o mouse
# Bot√£o para utilizar o algoritmo do FillPoly
# Bot√£o para definir a cor do vertice selecionado

# Classe da tela que ser√£o desenhados os poligonos
class Interface:
    def __init__(self, root):
        self.root = root
        self.root.title("Trabalho FillPoly - Computa√ß√£o Gr√°fica")
        self.root.configure(bg="#f0f0f0")

        self.lista_vertices = [] # Lista para armazenar os v√©rices
        self.vertex_color = "black" # Cor para o v√©rtice inicial ---------------------------------------------> talvez mudar depois

        # Quadro branco onde ser√£o exibidos os v√©rtices e poligonos (Canva cental)
        self.canvas = tk.Canvas(root, width=1000, height=600, bg="white")
        self.canvas.pack(side="left", fill="both", expand=True)

        # Painel dos Bot√µes laterais
        self.button_position = tk.Frame(root, bg="#cccccc")
        self.button_position.pack(side="right", fill="y")

        # Bot√µes
        self.clearScreen_button()
        self.selectVertex_color()
        self.FillPoly_button()

        # Captura de cliques
        self.canvas.bind("<Button-1>", self.canva_click)

    # M√©todo para armazenar o clique do usu√°rio numa lista de v√©rtices e desenh√°-lo no Canvas
    def canva_click(self, event):
        x, y = event.x, event.y
        self.lista_vertices.append((x, y))
        r = 3  # raio do ponto
        self.canvas.create_oval(x - r, y - r, x + r, y + r, fill=self.vertex_color, outline="black")

    # Bot√£o para limpar a tela
    def clearScreen_button(self):
        clearScreen_b = tk.Button(
            self.button_position, text="üßπ Limpar Tela",
            command=self.clearScreen, font=("Arial", 12, "bold"),
            bg="#ff6666", fg="white", relief="flat", padx=10, pady=5
        )
        clearScreen_b.pack(pady=5)

    # L√≥gica para o bot√£o de limpar a tela
    def clearScreen(self):
        self.canvas.delete("all")
        self.lista_vertices.clear()

    # Bot√£o para selecionar a cor do v√©rtice 
    def selectVertex_color(self):
        color_b = tk.Button(
            self.button_position, text="üé® Selecionar Cor do V√©rtice",
            command=self.select_color, font=("Segoe UI", 12, "bold"),
            bg="#4da6ff", fg="white", relief="flat", padx=10, pady=5
        )
        color_b.pack(pady=5)

    # L√≥gica para o bot√£o de selecionar a cor do v√©rtice
    def select_color(self):
        color = colorchooser.askcolor(title="Escolha a cor do v√©rtice")[1]
        if color:
            self.vertex_color = color

    # Bot√£o para preencher o poligono com o FillPoly
    def FillPoly_button(self):
        fill_b = tk.Button(
            self.button_position, text="üñå Preencher Pol√≠gono (FillPoly)",
            command=self.FillPoly_algorithm, font=("Segoe UI", 12, "bold"),
            bg="#66cc66", fg="white", relief="flat", padx=10, pady=5
        )
        fill_b.pack(pady=5)

    # L√≥gica do FillPoly
    def FillPoly_algorithm(self):
        pass
